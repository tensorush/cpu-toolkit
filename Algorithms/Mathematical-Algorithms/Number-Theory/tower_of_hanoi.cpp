/*
    Tower Of Hanoi
    -----------------------
    Time: O(2^numDisks - 1)
    Space: O(1)
*/
#include <iostream>
#include <cmath>

void TowerOfHanoi(const unsigned& numDisks) {
    // TODO: Solution visualization
    // The position of the bit change in the consective Gray code
    // provides the index of the disk that is moved at the current step.
    // The resulting sequence is known to be generated by the ruler function,
    // which is a restriction of the Thomae's function to the dyadic rationals.
    unsigned disk, move, numMoves = pow(2, numDisks);
    for (unsigned i = 1; i < numMoves; ++i) {
        for (disk = 1, move = i; move % 2 == 0; ++disk) {
            move /= 2;
        }
        std::cout << disk << ' ';
    }
    std::cout << std::endl;
}

int main() {
    unsigned numDisks;
    std::cin >> numDisks;
    TowerOfHanoi(numDisks);

    return 0;
}